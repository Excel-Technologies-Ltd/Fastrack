[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-07-17 16:05:21.111460",
  "module": null,
  "name": "Set Exchange Rate in purchase invoice",
  "script": "\n\nfrappe.ui.form.on('Purchase Invoice Item', {\n    item_code: function(frm, cdt, cdn) {\n        console.log(\"work\",frm.convsersion_rate)\n        frappe.model.set_value(cdt, cdn, 'custom_exchange_rate', frm.doc.conversion_rate)\n        \n    }\n});\n\n\n\nfrappe.ui.form.on('Purchase Invoice', {\n    supplier: function(frm) {\n        if (frm.doc.supplier) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Supplier',\n                    name: frm.doc.supplier\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        // Set the supplier name\n                        frm.set_value('supplier_name', r.message.supplier_name);\n\n                        // Find default credit account for the same company\n                        const company = frm.doc.company;\n                        const account = (r.message.accounts || []).find(acc => acc.company === company);\n\n                        if (account && account.account) {\n                            frm.set_value('credit_to', account.account);\n                        }\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Import Sea Master Bill",
  "enabled": 1,
  "modified": "2025-07-21 03:09:12.113090",
  "module": null,
  "name": "Import Sea Master Bill",
  "script": "frappe.ui.form.on('Import Sea Master Bill', {\n\trefresh(frm) {\n// \t agent\n\t frm.set_query(\"agent\", function () {\n                return {\n                    filters: {\n                        supplier_group: \"Agent\"\n                    }\n                };\n            });\n        // \tshipping line  \n        frm.set_query(\"shipping_line\", function () {\n            return {\n                filters: {\n                    supplier_group: \"Shipping Line\"\n                }\n            };\n            });\n//   shipper\n        frm.set_query(\"shipper\", function () {\n            return {\n                filters: {\n                    supplier_group: \"Agent's Shipper\"\n                }\n            };\n            });\n    //  Consignee\n            frm.set_query(\"consignee\", function () {\n            return {\n                filters: {\n                    supplier_group: \"MBL Consignee\"\n                }\n            };\n            });\n\t}\n\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-07-17 10:34:34.178121",
  "module": null,
  "name": "Purchase Invoice (Supplier Option For SHBL)",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n  \n\n    refresh(frm) {\n        console.log(\"refresh triggered\"); // Debug: Confirm refresh execution\n        frm.events.update_supplier_filter(frm);\n    },\n\n    update_supplier_filter(frm) {\n        console.log(\"update_supplier_filter start\"); // Debug: Confirm function start\n        const hbl_id = frm.doc.custom_shbl_id;\n\n        if (hbl_id) {\n            frappe.call({\n                method: 'fastrack_erp.api.get_supplier_list_by_hbl_id',\n                args: {\n                    id: hbl_id,\n                    doctype: 'Import Sea House Bill'\n                },\n                callback: function(r) {\n                    console.log(\"Server response:\", r); // Debug: Log server response\n                    if (r.message && Array.isArray(r.message) && r.message.length > 0) {\n                        console.log(r.message)\n                        frm.filtered_suppliers = r.message;\n                        setTimeout(() => {\n                            frm.set_query('supplier', () => {\n                                console.log(\"Setting supplier query in onload\");\n                                const hbl_id = frm.doc.custom_shbl_id;\n                                if (hbl_id && frm.filtered_suppliers && frm.filtered_suppliers.length > 0) {\n                                    console.log(\"Filtered suppliers:\", frm.filtered_suppliers);\n                                    return {\n                                        filters: {\n                                            name: [\"in\", frm.filtered_suppliers]\n                                        }\n                                    };\n                                }\n                                return {\n                                    filters: {}\n                                };\n                            });\n                        }, 1500);\n                    } else {\n                        frm.filtered_suppliers = [];          \n                    }\n                },\n                error: function(err) {\n                    console.error(\"Error in frappe.call:\", err); // Debug: Log error\n                    frm.filtered_suppliers = [];\n                    frappe.msgprint({\n                        title: __('Error'),\n                        indicator: 'red',\n                        message: __('Failed to fetch supplier list.')\n                    });\n                    frm.refresh_field('supplier');\n                }\n            });\n        } else {\n            frm.filtered_suppliers = [];\n            console.log(\"No HBL ID, resetting filter\");\n            frm.refresh_field('supplier');\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-07-24 13:50:35.246998",
  "module": null,
  "name": "Sales Invoice (Set option for hbl)",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\n    refresh(frm) {\n        console.log(\"refresh triggered\"); // Debug: Confirm refresh execution\n        frm.events.update_customer_filter(frm);\n       \n    },\n\n    update_customer_filter(frm) {\n        console.log(\"update_customer_filter start\"); // Debug: Confirm function start\n        const hbl_id = frm.doc.custom_hbl_sea_link;\n        \n        if (hbl_id) {\n            frappe.call({\n                method: 'fastrack_erp.api.get_customer_list_by_hbl_id',\n                args: {\n                    id: hbl_id,\n                    doctype: 'Import Sea House Bill'\n                },\n                callback: function(r) {\n                    console.log(\"Server response:\", r); // Debug: Log server response\n                    if (r.message && Array.isArray(r.message) && r.message.length > 0) {\n                        frm.filtered_customers = r.message;\n                        setTimeout(()=>{\n\n\n                        frm.set_query('customer', () => {\n                            console.log(\"Setting customer query in onload\");\n                            const hbl_id = frm.doc.custom_hbl_sea_link;\n                            if (hbl_id && frm.filtered_customers && frm.filtered_customers.length > 0) {\n                                console.log(\"Filtered customers:\", frm.filtered_customers);\n                                frm.filtered_customers.push(\"CNF Agent Billing Customer\");\n                                return {\n                                    filters: {\n                                        name: [\"in\", frm.filtered_customers]\n                                    }\n                                };\n                            }\n                            return {\n                                filters: {}\n                            };\n                        });\n\n\n\n                        },1500)\n                        \n                    } else {\n                        frm.filtered_customers = [];          \n                    }\n                },\n                error: function(err) {\n                    console.error(\"Error in frappe.call:\", err); // Debug: Log error\n                    frm.filtered_customers = [];\n                    frappe.msgprint({\n                        title: __('Error'),\n                        indicator: 'red',\n                        message: __('Failed to fetch customer list.')\n                    });\n                    frm.refresh_field('customer');\n                }\n            });\n        } else {\n            frm.filtered_customers = [];\n            console.log(\"No HBL ID, resetting filter\");\n            frm.refresh_field('customer');\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Import Sea House Bill",
  "enabled": 1,
  "modified": "2025-07-24 14:30:03.150559",
  "module": null,
  "name": "Import Sea House Bill",
  "script": "frappe.ui.form.on('Import Sea House Bill', {\n\trefresh(frm) {\n    \n\t    console.log(\"working\")\n\t\tfrm.set_query(\"hbl_consignee\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomer_group: \"MBL CONSIGNEE\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tfrm.set_query(\"notify_to\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomer_group: \"Customers\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tfrm.set_query(\"shipper\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomer_group: \"Customers\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\n\t\tfrm.set_query(\"co_loader\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomer_group: \"Co-Loader\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\t\n\t\tfrm.set_query(\"cf_agent\", () => {\n\t\t\treturn {\n\t\t\t\tfilters: {\n\t\t\t\t\tcustomer_group: \"C&F\"\n\t\t\t\t}\n\t\t\t};\n\t\t});\t\t\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2025-07-17 13:26:04.955163",
  "module": null,
  "name": "Sales Invoice (set_customer_debit_account)",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    customer: function(frm) {\n        if (frm.doc.customer) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Customer',\n                    name: frm.doc.customer\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        // Set the customer name\n                        frm.set_value('customer_name', r.message.customer_name);\n\n                        // Find default debit account for the same company\n                        const company = frm.doc.company;\n                        const account = (r.message.accounts || []).find(acc => acc.company === company);\n\n                        if (account && account.account) {\n                            frm.set_value('debit_to', account.account);\n                        } else {\n                           \n                        }\n                    }\n                }\n            });\n        }\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2025-07-21 00:47:23.997741",
  "module": null,
  "name": "Purchase Invoice (set_credit_account)",
  "script": "frappe.ui.form.on('Purchase Invoice', {\n    supplier: function(frm) {\n        if (frm.doc.supplier) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Supplier',\n                    name: frm.doc.supplier\n                },\n                callback: function(r) {\n                    if (r.message) {\n                        // Set the supplier name\n                        frm.set_value('supplier_name', r.message.supplier_name);\n\n                        // Find default credit account for the same company\n                        const company = frm.doc.company;\n                        const account = (r.message.accounts || []).find(acc => acc.company === company);\n\n                        if (account && account.account) {\n                            frm.set_value('credit_to', account.account);\n                        } else {\n                            // Handle case where no account is found (optional)\n                        }\n                    }\n                }\n            });\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2025-07-24 14:34:38.102578",
  "module": null,
  "name": "Payment Entry Reference",
  "script": "// Helper function to get HBL data and set fields\nasync function setHBLData(row, frm) {\n    try {\n        // Get HBL type first\n        const hblTypeResult = await frappe.db.get_value(\n            row.reference_doctype, \n            row.reference_name, \n            \"custom_hbl_type\"\n        );\n        \n        if (!hblTypeResult.message?.custom_hbl_type) return;\n        \n        const hblType = hblTypeResult.message.custom_hbl_type;\n        \n        // Set HBL type\n        frappe.model.set_value('Payment Entry Reference', row.name, 'custom_hbl_type', hblType);\n        \n        // Handle Import Sea House Bill\n        if (hblType === \"Import Sea House Bill\") {\n            let hblField, hblValue;\n            \n            if (row.reference_doctype === \"Purchase Invoice\") {\n                hblField = \"custom_shbl_id\";\n            } else if (row.reference_doctype === \"Sales Invoice\") {\n                hblField = \"custom_hbl_sea_link\";\n            }\n            \n            if (hblField) {\n                const hblResult = await frappe.db.get_value(\n                    row.reference_doctype,\n                    row.reference_name,\n                    hblField\n                );\n                \n                if (hblResult.message?.[hblField]) {\n                    frappe.model.set_value('Payment Entry Reference', row.name, 'custom_hbl_no', hblResult.message[hblField]);\n                }\n            }\n        }\n        \n        frm.refresh_field('references');\n        \n    } catch (err) {\n        console.log(\"Error setting HBL data:\", err);\n    }\n}\n\n// Main form events\nfrappe.ui.form.on('Payment Entry', {\n    refresh(frm) {\n        if (frm.doc.references) {\n            frm.doc.references.forEach(row => {\n                if (row.reference_doctype === \"Sales Invoice\" || row.reference_doctype === \"Purchase Invoice\") {\n                    setHBLData(row, frm);\n                }\n            });\n        }\n    }\n});\n\n// Child table events\nfrappe.ui.form.on('Payment Entry Reference', {\n    reference_name(frm, cdt, cdn) {\n        const row = locals[cdt][cdn];\n        if (row.reference_doctype === \"Sales Invoice\" || row.reference_doctype === \"Purchase Invoice\") {\n            setHBLData(row, frm);\n        }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Import Sea House Bill",
  "enabled": 1,
  "modified": "2025-07-24 14:14:57.910885",
  "module": null,
  "name": "Import Sea House Bill (hide add button)",
  "script": "frappe.listview_settings['Import Sea House Bill'] = {\r\n  refresh: function(listview) {\r\n      console.log(frappe.get_route())\r\n      if (frappe.get_route()[2] == 'List'){\r\n          $(\".btn-primary\").hide()\r\n      }\r\n  }\r\n};",
  "view": "List"
 }
]